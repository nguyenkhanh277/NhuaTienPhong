<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnSetting.ImageOptions.LargeImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAIAAAACACAYAAADDPmHLAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        EwAACxMBAJqcGAAAGexJREFUeF7tnQeUVFWagOmmu6EJTTc0DTQNAmbAhDmOCGsAM4qiOLBGEBlQonFn
        jGOacY+ri7PrGGYxoO6uYl7ds8cZMeuqmEYxjQln5riCuLNh9u3/XXiPe2/9VfVehe6q7vrP+c7prrrx
        /2+9d8N/7+3WyaVNuEF4Svi3hBCHuKRRkTIUDPd7IciTr4VKIyhDuVrQDJoLPxUqUmbytKAZMxd4HVSk
        zGS1EBlxyEsvBa3vvBOLIa+8Yhsf3hQqUmbCu9sYsKquLhi+YUMw/Pvv4yFhq+rr7QawVqhIGUmN8H+C
        MWD3oUN1Q2egZvhwuwH8WeguVKRMZJAQGbBul11UI2eibrfd7AYALUJFykR2ECLj1R98sGrkTNQfdpht
        fBgrVKRMZKIQGa/3KaeoRs5En5kzbePDBKEiZSInCZHxGs47TzVyJhoWLbKND9OEipSJnCtExmu86irV
        yJlouuYa2/gwX6hImchVQmS8Abfeqho5E823324bH64UKpJQqoRjhFsEplNHCu0hvxQi47U89JBq5Ey0
        PPKIbXy4VWgPQUfoCp2hO3RYlsJY/A7BVuKfhPZ4lz4sRPkOfuEF1ciZYObQTkNYKRRb6LugIztfdIgu
        y0oo8HLBrojNT4RqoVjykhDlN/TDD1UjZ2LoJ5/Y5YUXhWIJurhU8PMMQZdl0wiyGT/kXqGXUAz5RIjy
        Gvbtt6qRM7J+fdCtqsou78dCMQQdrBDsvDTKohGoxq/bddege0uL89km+FUNEQopvDP/UzB5VPfvrxs4
        BtXNzXZZvxcK/T6m7s7TCroPHBjU7b6789kmSroRqMbvsffeQdvatUHre+8FdTvs4Hy3id8JuwiFkgYh
        Sr92u+1U48ahdvRou5zQVyiUUOfPBCeP2jFjgtZ33w2Gff110GPffZ3vNlGSjSCj8UOFUqn6yZOdMJvY
        IBwtFEK2EqK0e+y/v2PUJPQ88EC7jLClUAihd0+dnfSZfvb1VQ6NIJbxI+Td2nDuuU7YTbB6t0TI9zG7
        rxCl22vKlNQyxKTX1Kl2+WAfIR+hbtTRTzdomDfP6MYvg2kE++yTEl4oiUaQzPgWA5YtC6pqa514m7hN
        6CEkFeIcITwiROn1nTVLzT8OfefMscsFpE0euZbvdsFNs6Ym6H/zzWr+IaXaCHI2fsigJ580nTQ/DeEZ
        oVnIJnXCYQKK/Q8hJa2ma69V845D089+lpLeJsiLhkretUI2GSj8WnDSqW5qCloef1zN2wedllIj4FHm
        T/IkMn5I6+rVpqPmpyV8KIwWNOkvXC78UdDiGqobGnKaAwgZ+vHHQXW/fmraFpThMoEyaTJGoC5OvNpt
        tgla33xTzTcdphGIjv20BGxR6BFKRqET4xQiF+OHtH31VdBz4kQnvU18KxwihDJAuEJYJ2jhI3rstVcw
        eNUqNb8kkAZpaXl4UCbKRhlDOVSgDk7YngcdFLR98YWaXzYyNILjhHYT5qmjzBnn52r8iHXrzPvaTncT
        uGMtEFiMWb/pM5W6nXcOGi+9NPEvKw6kSdrkoeVtQRkp60KBsjvf9znzzNwmpizQNTr30v6F0G7i+Nwz
        ycM4XytsUvrfcEPQrXt3u2IZYazeeNll5lWipVcMWt96K2i8/HIzZtfKpFJdbfoUWnpJQdfKxFq77l0Y
        JTiLFkzy0FvVCpyUlpUrzfvbTt+H/Abee28yb99CI3kPXLEiqNtxR7WMIdQllxVJDX79tWPH+nkw89le
        K62ROF43wCSPNpbNhSGvvRbUjBrlpA9Uvvmee4Lh332nxkuLGIsO4aCnngqa77wz6LdwYdBz/HgDf/MZ
        35lOY9JGRUOQxqjNdNaMHGn2GajxkiK6rZ80KSUPocO8lVJWsJjkUQufA3SU+s6da35hdBKTGL7t00+D
        5l/9Kuhz2mnGwzfbE8WGsMQhLmmQlpZHClI2ykhZKXPfc84J2j7/XA+bA2km0FhZ7TBhGTNlJSvbxEax
        GLpmTdB4xRVZH8m5QJqkTR5a3sWGiTOlXOi+mMvqsYTlTHdFq6YmGPTEE2pFCo48fnm/mmGkdLScchQD
        yYO8zDs96asiR9ClMmuKzou1nJ5YWgVnZYtZrmIMxyJE+Txu2fRh5xuH7t2rgurqzWv9/M1ndpg4kHfz
        3XcXtSEwukGXXt7outDL6HnLOMFZ4arddtug7csv1YrlA52qHvvtZyskhf6N9UHPHjUpnx85cZvg8+fn
        Bf369og+428+O0K+s8NCfc8ak5b/uQ0rdgXr6FmgO3To5YeOC7l8XlA5VnAK3HPCBDPJo1UwKcO++SZo
        WLDAvGL8fKBHXffghMNHB/fceGywxVB3CpfGcPt1Rwb/+8GFwZ/XXJjSAPiM7wjjNxzSIs2pk0ebPOzv
        IqRMlI0yamVPjOgszewos7AlLecLTqGZ/VIrmQAeheke93171wVLZu0TfPnifGPIM050w1VVdQvuu2mK
        +S5EawAhhLXjA2ny3RcvzA8Wn7W3ydMPA5SRiSKtDklIMyuKbkte1IWifGbBeNdrwzje2+eetmfwh1cX
        RMZb9cBMY3A73NVLJ0Tfh2RqAPDTJQc5aZDms/fPjL4nz/mn7qn2HSirGbIqdYmDmQ310hTafcEnH2Ht
        +zfC5gpI7zmX2bCm66/3nTMN+4xrC/790TMco/33by8Ixo0Z7ISbduSY6LFvk60BEIe4dlo7jx4U/Ndv
        z3fCvfbIGaYsdjiDlDmXRs8sqDIVji5z8UHoUGE79UdCVBF+GbE7S9KzbliyxFbCxjSkx/7j+QcYY9uG
        gBt/fIgTlsc0nTs/HGRrAEDcPr3cR/0NlxycEo6yUCZ7ZBFCHeKOEpj9VJ506BB/grIUtlQ7S7c1I0YE
        bZ99pirARjP+wP69gqfvmp5iAOCX2TbYVR6PcS0sxGkAcNVi91XQOqhv8Kf33KdACGWjjHZ46Ld0qVpH
        G2Y9lalvdIc/QVnLJMFZFu179tmqEkLMY98KDyPa+gXvPj1bVTz847LjnPBbDm8Kvn9nqRoW4jYA0iAt
        O22/Q2nzzlOzU0YgkO11wJS3Fwed4XHUKWSxEFWOaVVNCUDnyX/nj96qOfjdqh+pCg+ZuN9IJ86tVx+u
        hguJ2wCAtOy0x+89Qg0XQlkpsx2HOmXqGCrT1ziPdhrBfSuqHONbTQlm1st7B/LLz2Z8ngx2nIY+PYJ1
        by5Ww4YkaQCkRZp2Hm89OUsNG/KplNl/ElC3dENETjGxwwr4XHQKwUXK6Qc0L1+eogAmUHxvG96nmR77
        IQwF7XhnnTRODWeTpAHArJNdD5wfzdxDDWfD68DvEzBPoE0WmSefFU74TojjGFvy4vz68aLRlnTNDJ8V
        jh51ug6fDcO1IS19nLgvPXSaGtYmaQN4ZeXpTh4tA3oH//N+6kjE5+nl01NGBw0LF6bUH50o/gRlfyYB
        nrLur5/FE6/y5mBGb3qXYZWmUJ/XHzvTibfT9oPUcD5JGwDsOnaIkxdzAFo4n7+ad4ATj7pqw2G8i5xw
        G/0L03kbl4XgLh1ViBae8uuXMTLbt+xwTKxo43yN6y9058svmLOvGs4nlwZw8Vy3nNddMFEN50Nd/Mmi
        ngcckDo/IP8rTqfosCyFTRuO3z4t3Kmw4L/7mFr1Z/gycegPtnTi88jVwvnk0gD+9a5TnLzIWwunwdPC
        nzY2Po2ePgY+8IATRkCHcTaflJwwho0qYt79Wov3Fnjo0GkK1GCM3qt+s6MEq3gb3l6ihvXJpQGQn71S
        SN6Z5hp8WDsI40LduHG6TnbayQknsL+g7MTZB4cbtVNRgbUBOwxTt/bCTjboJNrxJ+w7MiUMj1+GkfTI
        X334dLOg89Q/nBz0thoOf/MZ3xGGsMTRXkPkYefJU8EPkw7q5q8iausjnGpmhxHYhlZWwsKFs1dPG//6
        690ss2qKS8cVC8c78SeP38o8QY6btH2w9y5Dg2FDGnLy9AkhLmmQFmmSNnnYYa5cNF4tWzqWznb392lz
        IpwPYIcR0CWv1LIRdtBGFaBj41dy6AcfOD58OFqw1q4pzYZfEdO+F52zX8rcf0fQJg2EslCmOE+vr146
        13gZRWmIDtCFrx9l58/hQskK69SczMHhDOzPZxt1VHi2VPkVxMPWDoO3jaYwxvmrnzjLrOn/YM/hef2i
        iw1lo4zXSFkps7YMDf4yMzubsulHQKfoFh2j66L7BnA8Oqduc/AyZ++yEYQTODmEkXP4OIoNz1QOZIrO
        5NHQnEP9ue9Hfnmio6TPnptnhnSjhjU64ZKAQZiO5RH+F/uPMv6AJx4xJjh16s5BneXaxd98xneEISxx
        iJtPg6Ps1IG62HV7/PZpTjjTQfb00/r2204YBXSO7rEBtsAm2AYbYStshu2wYdaj7rkUiblnrlnhpg0u
        W4jO28+HHnvskVI5/wg2pktDR4uXV54WTD9mh6C2JpmLd2NDT9MnuOuvjwl+fd+M4JNn52acS4g7CiAN
        0iJN0iYP8rLzzgZ1OUXqxGximOag5t5OmKEffZSipzS7gHMBW2JTbIuNsXV0EVahbtdKgb31g599NqVi
        7Laxw/HLe/tfZplVNvtzDYZhkw/aOpg93X1HHj95+xTjZSKXYWAIHUI779nTdwsmSefQdybVoI7U9aSj
        3P19HE3r62nw888H1Y25PwGz8AdhmGDuxtMCxEM6MexU5THGvvfeJ5xgtkQ1/fzn5oAFv1LAlis7jWnS
        AJyOkQdOGGdOGxc89HdTg/WrN67y3XKFu0fuwjn7pRgqE/k0AB7rdt6Uhc8pG2WkrJTZDmNDXacd6TYA
        jqfXdIUO0SU6RbfoGF2b3cFWJzpHsL25Ecv5oqpXL+O5w1l1bEakcA2LF5vjVprvuCNoefRRM5dt9szl
        sBlUuY1DhV8LvWvtUe4PAUMjxCWfBrDMa3zaUJAyU/Y4TzVgQkzTVUZE99gAW2ATbNN03XXGVtiMzbrY
        EFtiUyVfcxsat2RGHw559VU9s0KxYYPm9+Zw8tFjgzcePzNFqTb+eJr3sxYuHfk0gOU3HO3kff7Zmdcf
        qAt1suP4VPXpkzorWGBa33jDzxfbuw2Aa9O0yIWC7dd2fjbbjhoQawkYzvmhe5Lmyr8/QQ2XjnwaAI95
        O++5M3ZXw/lQt+22HODEtcnnPKM4DH3/fT/P9m8A7MG38wuh559kXn3mce58eZIpWcinAfhT0H95/E5q
        OA3qOGOKvnsZ3Wg6KxQl0QAG3nefXQAD27kyDdk0/J74iw+eqoZLRz4N4IV/PtXJO+kIhLpSZzsNGHj/
        /arOCkVJNIDGiy6yC2DG1OncrDPhLwOzgKOFS0c+DYBhnJ33YQdupYbLBHVu6ufOJzRecomqs0JREg2g
        z4wZdgGC/XcfpiooG8Sz08nmOOqTTwPA4dPOO9c6HLjXFk466EbTWaGoNACLkmwAaeYCCkVpvAIuvtgu
        QOUVYKXTJV4BWieQlcCu1gmkznYa0CU6gZVhYBcfBmaaCNpmZP9OPxHEZJcd16YkJoKMv3oxpyS74FQw
        exc6fCpY0m59/XU/X9MAUheD6uuDmi22MIs2XGNiFoMWLTLXqbJsyaWK3KvHun4xF4PoJT/wt+W5GIR/
        A2X3e/rpyHUxCBsMefllYxNsw4IdtjKLQZMmGV1jS2yq5GsWg/JfDh440BzazB07XLPCTRtsh9acHMBf
        Dj75qLGOe7cPS6uc0fPgL0p/OZgyUlZ/u5oNdZ3uPRHSDQGj5WDRKbrlaFt0jc4LtRyMQwjeIlqAvOBR
        H9chhE2guGLZn2vgdIHzhb9Zs2MdQnY1Q8E4DiEHHzDK1DWWQ8hzz7WLQwhCI+C4cR4JbwprhZSz7nMh
        qUsYu4LoVac9ji0NoUsY7+dnVswIPv7N3JTzfGziNgDSIC3SJO1cXMKoCz6H9AVIk1daO7uEYUtsim2x
        MbaOXMLSCY6EnPPDMS8TBE6k5gp1dqxykTJ36XLxIzdqFtwplCPf2FTJyMAOlwQcOoe3bvTrZ0PH4RO2
        Nk+KHx67Y1BXazmFyt98xneEISxxiJuPUyhlpw7h8XUhBXQKRffYAFtgE2yDjbAVNsN22DCrU2i+gosy
        lypyrx5XqxXMLRyY5WMjJh2qmu7tcB5wjlA2ysiG1Uwzk3m4haNbdIyuS/rIuOwbQ9ascToxcTeG/PG1
        BcE/3XK82anLpgw7n46AnUOUhTJRNq3MNp11Y4gvHbY17LzT9zSPcrZjF2prGGmRJmlXtobFl5LZHMrG
        DHrebNHmJFG2kPubQ/mM7whDWOJo8w/5bA79/SvndZnNoUhle7hHyvZwJn80nXSS7eHxDoi4+267ouax
        21UOiNCOy+lMB0Qg8Y6I8W7I7gpHxHDfgfrr70RHxCCVQ6KErnxIFMJ1qlGlmMcux2Pi2LRq55HkmDj/
        +Hrq6te/sx4Th3BQpHPla+WgyK51UCRCS44q1xmOisUvUAsbguNo5ajYzcJFylHlcjksGoVqig4ppcOi
        KWvlsOjNwhg27+Pi+TVleh0U87h4/5SSohwXP2eOHwedcdR+Wctowbk/31wYEeM61bQXRqQZ57Ns2+EX
        RkjZ/Hc+xLowQnSCbry4jKBY0StLoQOzRogqxDtQG/6oyJgYxdnxTRoyOmBYpc0TdOSVMZRJuzLGGN8f
        76cB3Sj+klwZw5JuWQmLQc8ImytSXR20PPigWvFMZLo0yh+HY4iyvzRKdKS4epXVpVGsU7N44VSCkyu0
        CseBzpPyyzBTq8yv2wtIxbw2jrTD78mzWNfGaX0g4U6hpH0AQnGuh4E+p58e+zGYjmwXR7LMylo7xvEv
        joQkF0eu+JtjnbgQXhxJHuTlr+qFcP5v3hdHiq7QmZJ+yV8ceZTgHC+HF+uwb7/VK5oQJlC4bMGfNg7Z
        ePjSGGNsvyfOKt5t1x4RvQ60BsB3hPGdO0e0NUqjmGLSTnuYlZSJsmmTPLmAztCdkhfX85ak7CwwexUV
        tmbrrc11aFoF84HOkn/HgE9zU71qLC6IpnPnNwA+S3d5dHOTesBSBAs7sTu3CTBXyYkOvfxK8vLowcKn
        QlRQ3Jk5lEirWEGQxyTn7fPItfONA+9tu8fO39q7PBu8ksziVp6vt0ygQ8U1nOvjubK/JKReeEHYXEB5
        HHJsmVahgiPKx6vGuJcpo4WCIz108jKePEU0vE3LY49prz2OiO0ldKjQK71bcArX/8Yb1YoUG5wr8bDF
        +8gvU76QJmlrDpztQf+bbtLKtUKoFjpMLhGcQjGlqVUgF3gHcqMm8+QslpihlbKUrMFGC3bbsOWKRzWb
        L/2ypoOwxCEuaaTb4paClI0yUlbKTNkL2QdSbheFnwgdIlMFpzBUfPi6dWrhk8JFyspdumbN3Ny1k/Tx
        K+HZfs0efLam9Vu0yPSygb/5jO/MFu0c0jb9kdT1fFMH6qLGS8r69UH9oYem5CGwEaRdZQvheyEqRO32
        2wdtX32lFzwhvF+1iR8bHCc5baS93sMqGP7++zU3LgfqwrXwahoJQcc41Xh5sEtohNBu4nj5VA8YYLYy
        aQVOCjthlfvz08KvrvHKK4t+sIUNfvu4biveu+mROlE3Lb2kUNfqZm+5eeMFne0mNwtR5gzF2tauVQsb
        G3l19D3rLLtCISyLLhJwjnT8C33YTcOWqkI1RhvSJG1lx44P3k/8QBYIKRtsqWO+r8lhX39tDoH20sYm
        7SbHCE4B2MmaayNo+/LLjcM4L00Bg9tXqOMgmbUhAOXRtqYnZfCqVXF36VImfoW4wIVyiOAshwN1pc5a
        ftnA+Ew8+WkKRwvtJgz/7hCcQuTSCJjjr912WyedTbAMOkbQhIZwqeDsO/Dh3ZvPuTsczpCtLyJQBsqS
        znsXnwhnWRyos7ZrOhMZjI8t2n2hqEZYLjiFSdIIBj35ZFDdX93+zfLnQCGbsGECjyNWH529iCEcmaLl
        HQfTH1HSFL4RuKOHvONs2sA3wl0eF6qbmoJBTzyh5u2TwfjYAFt0iOTcCAYsWxZU1arHwtCac1n7Jg47
        aNlGHaXXd/ZsNf84KG5apE0euWzUpHwpy+TM8PW/+WY1/5BSNX4oyRqBjGUb5s93wlosFfJ9lHG1WpRm
        rylTUssQE87ksdMS2J+fj1A3OrQpF3I1zJunHrhV6sYPJVYjoDJcY+KHE1jhomNZCOFevShtc0u3pdAk
        KMuxHM5QCDlScFZOgRPZfH2Vg/FDydgIWt97L6gdq56Vx8pWIZc3uVQxSp8JKtuoSVAmXDiZo1Cyk+Cs
        oAJrDswzlJvxQ1EbAWNnc8uV97nAilahlzV5zEZnFjFJpRk3DuYots1lZeaz0D1tltGfF+x8TL7KOB9K
        2vihqI1A4V6hWMuZ3Ki5MZ+qqtwmXuR97DlnciBTMYTl9LsEOy+NsjB+KNkaAStYxVzG5MkS5Zfu/sJM
        +EfZCZzGVSzhyZKysmpRVsYPhQL7k0U8mttj5Yq7dKN8OdZWM3ImOH7VTkPgKLZiCyusziKbgA7Lzvih
        0LLp3d8icDjhSKE9hEmaSIktDz+sGjkTnL1rpyFwDl97CCutXAKNzpjeLXS/o0sICoyMN+C221QjZwJH
        EDsNoVPs1e8qwhXqkfE45VwzciaYQrbTEDiBsyJlItyfHxmP49M1I2eCOHYaQrt73VQkd5koRMZLdxR7
        JohjpyFw9m5FykR2ECLjcXGCZuRMEMdOQyjbbdpdUQYJkfGYVdOMnAnlVpOy26LdlYVxc7TixpUpmpEz
        QZwwvoBrV9GPXK9IYSW6BaWqVy/VyGnZsMG/Y4fLFipSZrJaiIzIHjuuTYuDcrsWN21UpMzkacE3ZK6Y
        27UqUl7COXuaMXOBaeyKlJkU6jY00sh6wVJFSlMwHHfj8QjnlswkEIe4Q4VOKt26/T8dRtXMwWPxyQAA
        AABJRU5ErkJggg==
</value>
  </data>
</root>